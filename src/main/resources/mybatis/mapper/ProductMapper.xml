<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xzy.mapper.ProductMapper">
    <resultMap id="BaseResultMap" type="com.xzy.beans.Product">
        <id column="product_id" property="productId" jdbcType="INTEGER"/>
        <result column="product_name" property="productName" jdbcType="VARCHAR"/>
        <result column="product_picture" property="productPicture" jdbcType="VARCHAR"/>
        <result column="product_stock" property="productStock" jdbcType="INTEGER"/>
        <result column="product_com_num" property="productComNum" jdbcType="INTEGER"/>
        <result column="product_price" property="productPrice" jdbcType="REAL"/>
        <result column="product_describe" property="productDescribe" jdbcType="VARCHAR"/>
        <result column="product_superclass" property="productSuperclass" jdbcType="CHAR"/>
        <result column="product_class_id" property="productClassId" jdbcType="VARCHAR"/>
        <result column="product_createtime" property="productCreatetime" jdbcType="TIMESTAMP"/>
        <result column="product_brand" property="productBrand" jdbcType="VARCHAR"/>
        <result column="product_material" property="productMaterial" jdbcType="VARCHAR"/>
        <result column="product_version" property="productVersion" jdbcType="VARCHAR"/>
        <result column="product_style" property="productStyle" jdbcType="VARCHAR"/>
        <result column="product_thickness" property="productThickness" jdbcType="VARCHAR"/>
    </resultMap>


    <sql id="Base_Column_List">
        product_id, product_name, product_picture, product_stock, product_com_num, product_price,
        product_describe, product_size_pic, product_superclass, product_class_id, product_createtime,
        product_brand, product_material, product_version, product_style, product_thickness

    </sql>

    <resultMap id="getClass" type="com.xzy.beans.Product">
        <id column="product_id" property="productId" jdbcType="INTEGER"/>
        <result column="product_name" property="productName" jdbcType="VARCHAR"/>
        <result column="product_picture" property="productPicture" jdbcType="VARCHAR"/>
        <result column="product_stock" property="productStock" jdbcType="INTEGER"/>
        <result column="product_com_num" property="productComNum" jdbcType="INTEGER"/>
        <result column="product_price" property="productPrice" jdbcType="REAL"/>
        <result column="product_describe" property="productDescribe" jdbcType="VARCHAR"/>
        <result column="product_superclass" property="productSuperclass" jdbcType="CHAR"/>
        <result column="product_class_id" property="productClassId" jdbcType="VARCHAR"/>
        <result column="product_createtime" property="productCreatetime" jdbcType="TIMESTAMP"/>
        <result column="product_brand" property="productBrand" jdbcType="VARCHAR"/>
        <result column="product_material" property="productMaterial" jdbcType="VARCHAR"/>
        <result column="product_version" property="productVersion" jdbcType="VARCHAR"/>
        <result column="product_style" property="productStyle" jdbcType="VARCHAR"/>
        <result column="product_thickness" property="productThickness" jdbcType="VARCHAR"/>
        <collection property="productclass" ofType="com.xzy.beans.ProductClass">
            <id column="product_class_id" property="productClassId" jdbcType="INTEGER"/>
            <result column="product_class_name" property="productClassName" jdbcType="VARCHAR"/>
            <result column="product_class_image_path" property="productClassImagePath" jdbcType="VARCHAR"/>
        </collection>
    </resultMap>


    <!--根据男女获得商品分类-->
    <select id="getClasss" resultMap="getClass">
  SELECT
  p.product_class_id,pc.product_class_image_path
  from
  product  p,product_class  pc
  where  p.product_class_id=pc.product_class_id  and  p.product_superclass=#{sex}
  </select>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        <!--
        WARNING - @mbggenerated
        This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select *
        from product
        where product_id = #{productId}
    </select>


    <!--最热商品-->
    <select id="getHotSearchProduct" parameterType="Integer" resultMap="BaseResultMap">
    select
    product_id,product_picture
    from    product
    order by product_com_num desc
    limit  0,3;
    </select>


    <!--最新商品-->
    <select id="recommendNewest" parameterType="Integer" resultMap="BaseResultMap">
    select  product_id,product_picture,product_name,product_price
    from product
    order by
    product_createtime
    desc
    limit 0,20
=======
>>>>>>> 5610132d7478820ee3e8ab62c4c960c2bf018ac5
  </select>

    <!--商品分类-->
    <select id="selectProductByProductClassId" parameterType="String" resultMap="BaseResultMap">
    select  product_name,product_id,product_picture,product_price
    from  product
    where  product_class_id=#{varchar}
    order by  product_com_num
    desc
    limit   0,20
    </select>

    <resultMap id="getClassId" type="com.xzy.beans.Product">
        <id column="product_id" property="productId" jdbcType="INTEGER"/>
        <result column="product_class_id" property="productClassId" jdbcType="VARCHAR"/>
        <result column="product_name" property="productName" jdbcType="VARCHAR"/>
        <result column="product_picture" property="productPicture" jdbcType="VARCHAR"/>
        <result column="product_price" property="productPrice" jdbcType="REAL"/>
    </resultMap>

    <!--根据商品id获得商品类别，并查出同类商品，猜你喜欢-->
    <select id="selectClassProductByProductId" parameterType="Integer" resultMap="getClassId">
    select  product_name,product_price,product_picture
    from  product
    where  product_class_id=(select product_class_id  from product  where  product_id=#{id})
    order by  product_com_num
    desc
    limit  0,10
    </select>

    <resultMap id="SelectHistory" type="com.xzy.beans.Product">
        <id column="product_id" property="productId" jdbcType="INTEGER"/>
        <result column="product_class_id" property="productClassId" jdbcType="VARCHAR"/>
        <result column="product_name" property="productName" jdbcType="VARCHAR"/>
        <result column="product_picture" property="productPicture" jdbcType="VARCHAR"/>
        <result column="product_price" property="productPrice" jdbcType="REAL"/>
        <association property="browse" javaType="com.xzy.beans.Browse">
            <id column="browse_id" property="browseId" jdbcType="INTEGER"/>
            <result column="product_id" property="productId" jdbcType="INTEGER"/>
            <result column="user_id" property="userId" jdbcType="INTEGER"/>
            <result column="browse_time" property="browseTime" jdbcType="TIMESTAMP"/>
        </association>
    </resultMap>

    <!--根据用户id获得最近浏览商品-->
    <select id="selectHistoryByUserId" parameterType="Integer" resultMap="SelectHistory">
    select  product_name,product_price,product_picture,product_id
    from   product p
    where   product_id in (select t.product_id from(select product_id,user_id
    from   browse  	where user_id=#{id} order by browse_time desc )as t )

    </select>

    <resultMap id="SelectCollet" type="com.xzy.beans.Collect">
        <id column="collect_id" property="collectId" jdbcType="INTEGER"/>
        <result column="user_id" property="userId" jdbcType="INTEGER"/>
        <result column="product_id" property="productId" jdbcType="INTEGER"/>
        <result column="state" property="State" jdbcType="INTEGER"/>
        <association property="browse" javaType="com.xzy.beans.Browse">
            <id column="browse_id" property="browseId" jdbcType="INTEGER"/>
            <result column="product_id" property="productId" jdbcType="INTEGER"/>
            <result column="user_id" property="userId" jdbcType="INTEGER"/>
            <result column="browse_time" property="browseTime" jdbcType="TIMESTAMP"/>
        </association>
    </resultMap>

    <!--根据用户id获得最近浏览商品并且是否收藏-->
    <select id="selectCollectByUserId" parameterType="Integer" resultMap="SelectCollet">
    select *  from
    ( (select  product_name,product_id,product_price,product_picture
    from   product
    where     product_id in
    (select t.product_id from((select product_id
    from   browse  where user_id=#{id}  order by browse_time desc limit 0,5)as t)) )as aa)
    left join
    ((select  product_id,state  from collect
    where user_id=#{id} and  product_id in (select t.product_id from(select product_id
    from   browse  where user_id=#{id}  order by browse_time desc limit 0,5)as t)) as bb)
    on
    aa.product_id=bb.product_id
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from product
    where product_id = #{productId,jdbcType=INTEGER}
    </delete>

    <select id="orderbyproduct_price" parameterType="Integer" resultMap="getClassId">
    select  *
    from  product
    where  product_class_id=(select product_class_id  from product  where  product_id=#{id})
    order by  product_price
    desc
    limit  0,20
    </select>


    <select id="orderbyproduct_com_num" parameterType="Integer" resultMap="getClassId">
    select  *
    from  product
    where  product_class_id=(select product_class_id  from product  where  product_id=#{id})
    order by  product_com_num
    desc
    limit  0,20
    </select>

    <select id="orderbyproduct_createtime" parameterType="Integer" resultMap="getClassId">
    select  *
    from  product
    where  product_class_id=(select product_class_id  from product  where  product_id=#{id})
    order by  product_createtime
    desc
    limit  0,20
    </select>

    <insert id="insert" parameterType="com.xzy.beans.Product">
        insert into product (product_id, product_name, product_picture,
        product_stock, product_com_num, product_price,
        product_describe, product_superclass,
        product_class_id, product_createtime, product_brand,
        product_material, product_version, product_style,
        product_thickness, product_size, product_color
        )
        values (#{productId,jdbcType=INTEGER}, #{productName,jdbcType=VARCHAR}, #{productPicture,jdbcType=VARCHAR},
        #{productStock,jdbcType=INTEGER}, #{productComNum,jdbcType=INTEGER}, #{productPrice,jdbcType=REAL},
        #{productDescribe,jdbcType=VARCHAR}, #{productSuperclass,jdbcType=CHAR},
        #{productClassId,jdbcType=VARCHAR}, #{productCreatetime,jdbcType=TIMESTAMP}, #{productBrand,jdbcType=VARCHAR},
        #{productMaterial,jdbcType=VARCHAR}, #{productVersion,jdbcType=VARCHAR}, #{productStyle,jdbcType=VARCHAR},
        #{productThickness,jdbcType=VARCHAR})
    </insert>

    <insert id="insertSelective" parameterType="com.xzy.beans.Product">
        insert into product
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="productId != null">
                product_id,
            </if>
            <if test="productName != null">
                product_name,
            </if>
            <if test="productPicture != null">
                product_picture,
            </if>
            <if test="productStock != null">
                product_stock,
            </if>
            <if test="productComNum != null">
                product_com_num,
            </if>
            <if test="productPrice != null">
                product_price,
            </if>
            <if test="productDescribe != null">
                product_describe,
            </if>
            <if test="productSuperclass != null">
                product_superclass,
            </if>
            <if test="productClassId != null">
                product_class_id,
            </if>
            <if test="productCreatetime != null">
                product_createtime,
            </if>
            <if test="productBrand != null">
                product_brand,
            </if>
            <if test="productMaterial != null">
                product_material,
            </if>
            <if test="productVersion != null">
                product_version,
            </if>
            <if test="productStyle != null">
                product_style,
            </if>
            <if test="productThickness != null">
                product_thickness,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="productId != null">
                #{productId,jdbcType=INTEGER},
            </if>
            <if test="productName != null">
                #{productName,jdbcType=VARCHAR},
            </if>
            <if test="productPicture != null">
                #{productPicture,jdbcType=VARCHAR},
            </if>
            <if test="productStock != null">
                #{productStock,jdbcType=INTEGER},
            </if>
            <if test="productComNum != null">
                #{productComNum,jdbcType=INTEGER},
            </if>
            <if test="productPrice != null">
                #{productPrice,jdbcType=REAL},
            </if>
            <if test="productDescribe != null">
                #{productDescribe,jdbcType=VARCHAR},
            </if>
            <if test="productSuperclass != null">
                #{productSuperclass,jdbcType=CHAR},
            </if>
            <if test="productClassId != null">
                #{productClassId,jdbcType=VARCHAR},
            </if>
            <if test="productCreatetime != null">
                #{productCreatetime,jdbcType=TIMESTAMP},
            </if>
            <if test="productBrand != null">
                #{productBrand,jdbcType=VARCHAR},
            </if>
            <if test="productMaterial != null">
                #{productMaterial,jdbcType=VARCHAR},
            </if>
            <if test="productVersion != null">
                #{productVersion,jdbcType=VARCHAR},
            </if>
            <if test="productStyle != null">
                #{productStyle,jdbcType=VARCHAR},
            </if>
            <if test="productThickness != null">
                #{productThickness,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>


    <update id="updateByPrimaryKeySelective" parameterType="com.xzy.beans.Product">
        update product
        <set>
            <if test="productName != null">
                product_name = #{productName,jdbcType=VARCHAR},
            </if>
            <if test="productPicture != null">
                product_picture = #{productPicture,jdbcType=VARCHAR},
            </if>
            <if test="productStock != null">
                product_stock = #{productStock,jdbcType=INTEGER},
            </if>
            <if test="productComNum != null">
                product_com_num = #{productComNum,jdbcType=INTEGER},
            </if>
            <if test="productPrice != null">
                product_price = #{productPrice,jdbcType=REAL},
            </if>
            <if test="productDescribe != null">
                product_describe = #{productDescribe,jdbcType=VARCHAR},
            </if>
            <if test="productSuperclass != null">
                product_superclass = #{productSuperclass,jdbcType=CHAR},
            </if>
            <if test="productClassId != null">
                product_class_id = #{productClassId,jdbcType=VARCHAR},
            </if>
            <if test="productCreatetime != null">
                product_createtime = #{productCreatetime,jdbcType=TIMESTAMP},
            </if>
            <if test="productBrand != null">
                product_brand = #{productBrand,jdbcType=VARCHAR},
            </if>
            <if test="productMaterial != null">
                product_material = #{productMaterial,jdbcType=VARCHAR},
            </if>
            <if test="productVersion != null">
                product_version = #{productVersion,jdbcType=VARCHAR},
            </if>
            <if test="productStyle != null">
                product_style = #{productStyle,jdbcType=VARCHAR},
            </if>
            <if test="productThickness != null">
                product_thickness = #{productThickness,jdbcType=VARCHAR},
            </if>
        </set>
        where product_id = #{productId,jdbcType=INTEGER}
    </update>


    <update id="updateByPrimaryKey" parameterType="com.xzy.beans.Product">
        update product
        set product_name = #{productName,jdbcType=VARCHAR},
        product_picture = #{productPicture,jdbcType=VARCHAR},
        product_stock = #{productStock,jdbcType=INTEGER},
        product_com_num = #{productComNum,jdbcType=INTEGER},
        product_price = #{productPrice,jdbcType=REAL},
        product_describe = #{productDescribe,jdbcType=VARCHAR},
        product_superclass = #{productSuperclass,jdbcType=CHAR},
        product_class_id = #{productClassId,jdbcType=VARCHAR},
        product_createtime = #{productCreatetime,jdbcType=TIMESTAMP},
        product_brand = #{productBrand,jdbcType=VARCHAR},
        product_material = #{productMaterial,jdbcType=VARCHAR},
        product_version = #{productVersion,jdbcType=VARCHAR},
        product_style = #{productStyle,jdbcType=VARCHAR},
        product_thickness = #{productThickness,jdbcType=VARCHAR},
        where product_id = #{productId,jdbcType=INTEGER}
    </update>
</mapper>